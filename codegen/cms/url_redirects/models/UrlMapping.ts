/**
 * URL redirects
 * URL redirect operations
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export class UrlMapping {
    /**
    * The unique ID of this URL redirect.
    */
    'id': string;
    /**
    * The target incoming URL, path, or pattern to match for redirection.
    */
    'routePrefix': string;
    /**
    * The destination URL, where the target URL should be redirected if it matches the `routePrefix`.
    */
    'destination': string;
    /**
    * The type of redirect to create. Options include: 301 (permanent), 302 (temporary), or 305 (proxy). Find more details [here](https://knowledge.hubspot.com/cos-general/how-to-redirect-a-hubspot-page).
    */
    'redirectStyle': number;
    /**
    * Whether the URL redirect mapping should apply only if a live page on the URL isn't found. If False, the URL redirect mapping will take precedence over any existing page.
    */
    'isOnlyAfterNotFound': boolean;
    /**
    * Whether the `routePrefix` should match on the entire URL, including the domain.
    */
    'isMatchFullUrl': boolean;
    /**
    * Whether the `routePrefix` should match on the entire URL path, including the query string.
    */
    'isMatchQueryString': boolean;
    /**
    * Whether the `routePrefix` should match based on pattern.
    */
    'isPattern': boolean;
    /**
    * Whether a trailing slash will be ignored.
    */
    'isTrailingSlashOptional': boolean;
    /**
    * Whether the `routePrefix` should match both HTTP and HTTPS protocols.
    */
    'isProtocolAgnostic': boolean;
    /**
    * Used to prioritize URL redirection. If a given URL matches more than one redirect, the one with the **lower** precedence will be used.
    */
    'precedence': number;
    'created'?: Date;
    'updated'?: Date;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "routePrefix",
            "baseName": "routePrefix",
            "type": "string",
            "format": ""
        },
        {
            "name": "destination",
            "baseName": "destination",
            "type": "string",
            "format": ""
        },
        {
            "name": "redirectStyle",
            "baseName": "redirectStyle",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "isOnlyAfterNotFound",
            "baseName": "isOnlyAfterNotFound",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isMatchFullUrl",
            "baseName": "isMatchFullUrl",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isMatchQueryString",
            "baseName": "isMatchQueryString",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isPattern",
            "baseName": "isPattern",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isTrailingSlashOptional",
            "baseName": "isTrailingSlashOptional",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "isProtocolAgnostic",
            "baseName": "isProtocolAgnostic",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "precedence",
            "baseName": "precedence",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "updated",
            "baseName": "updated",
            "type": "Date",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return UrlMapping.attributeTypeMap;
    }

    public constructor() {
    }
}

